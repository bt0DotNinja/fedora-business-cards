###
# fedora-business-cards - for rendering Fedora contributor business cards
# Copyright (C) 2011  Red Hat, Inc.
# Primary maintainer: Ian Weller <iweller@redhat.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
###

"""
Generates both sides of the business card.
"""

from decimal import Decimal
from xml.dom import minidom

from fedora_business_cards import __version__

BLANK_SVG = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"></svg>'
FEDORA_VIEWBOX = '100 100 707.776 215.080'
GOLDEN_RATIO = Decimal('1.61803399')


def convert(value, from_unit, to_unit):
    """
    Convert a value from one unit to another unit.
    """
    if from_unit == to_unit:
        return value
    conversions = {}
    conversions[('in', 'mm')] = Decimal('25.4')
    for units in conversions.keys():
        conversions[(units[1], units[0])] = 1 / conversions[units]
    return value * conversions[(from_unit, to_unit)]


def find_node(doc_node, tag_name, attribute_name, attribute_value):
    """
    Gets a specific node from a DOM tree with a certain tag name, attribute
    name, and attribute value.
    """
    # thanks, mizmo
    elements = doc_node.getElementsByTagName(tag_name)
    for element in elements:
        if element.hasAttribute(attribute_name):
            if element.getAttribute(attribute_name) == attribute_value:
                return element


def gen_front(data_name, data_title, data_lines, height, width, bleed, unit):
    """
    Generates the front of the business card.
    """
    # Create DOM objects
    biz_card = minidom.parseString(BLANK_SVG)
    fedora_logo = minidom.parse('/usr/share/fedora-logos/fedora_logo.svg')
    # Basic constants
    total_height = height + (2 * bleed)
    total_width = width + (2 * bleed)
    zeropointtwo = convert(Decimal('0.2'), 'in', unit)
    # Add dimensions to SVG
    svg_element = biz_card.documentElement
    svg_element.setAttribute('height', '%s%s' % (total_height, unit))
    svg_element.setAttribute('width', '%s%s' % (total_width, unit))
    # Generator comment
    generator_comment = biz_card.createComment(
        'Generated by fedora-business-cards/%s' % __version__
    )
    svg_element.appendChild(generator_comment)
    # White background
    white_back = biz_card.createElement('rect')
    white_back.setAttribute('height', '%s%s' % (total_height, unit))
    white_back.setAttribute('width', '%s%s' % (total_width, unit))
    white_back.setAttribute('x', '0')
    white_back.setAttribute('y', '0')
    white_back.setAttribute('fill', '#ffffff')
    svg_element.appendChild(white_back)
    # Blue stripe on right
    blue_stripe = biz_card.createElement('rect')
    blue_stripe.setAttribute('height', '%s%s' % (total_height, unit))
    blue_stripe.setAttribute('width', '%s%s' % (zeropointtwo + bleed, unit))
    blue_stripe.setAttribute('x', '%s%s' %
                             (width + bleed - zeropointtwo, unit))
    blue_stripe.setAttribute('y', '0')
    blue_stripe.setAttribute('fill', '#3c6eb4')
    svg_element.appendChild(blue_stripe)
    # Business card text
    usertext = biz_card.createElement('text')
    usertext.setAttribute('font-family', 'Cantarell')
    usertext.setAttribute('font-size', '10px')
    usertext.setAttribute('fill', '#000000')
    usertext.setAttribute('y', '%s%s' % (zeropointtwo + bleed, unit))
    # Name
    name = biz_card.createElement('tspan')
    name.setAttribute('font-weight', 'bold')
    name.setAttribute('font-size', '13px')
    name.setAttribute('x', '%s%s' % (zeropointtwo + bleed, unit))
    name.setAttribute('dy', '10px')
    name_text = biz_card.createTextNode(data_name)
    name.appendChild(name_text)
    usertext.appendChild(name)
    # Title
    title = biz_card.createElement('tspan')
    title.setAttribute('font-size', '11px')
    title.setAttribute('x', '%s%s' % (zeropointtwo + bleed, unit))
    title.setAttribute('dy', '13px')
    title_text = biz_card.createTextNode(data_title)
    title.appendChild(title_text)
    usertext.appendChild(title)
    # Custom rows
    data_lines = [''] + data_lines
    y_offset = '10px'
    for data_line in data_lines:
        line = biz_card.createElement('tspan')
        line.setAttribute('x', '%s%s' % (zeropointtwo + bleed, unit))
        if data_line == '':
            y_offset = '20px'
            continue
        line.setAttribute('dy', y_offset)
        y_offset = '10px'
        line_text = biz_card.createTextNode(data_line)
        line.appendChild(line_text)
        usertext.appendChild(line)
    svg_element.appendChild(usertext)
    # Fedora logo
    logo_svg = biz_card.importNode(fedora_logo.documentElement, 9001)
    logo_svg.setAttribute('height', '.25in')
    logo_svg.removeAttribute('width')
    logo_svg.setAttribute('x', '%s%s' % (bleed + convert(Decimal('0.175'),
                                                         'in', unit), unit))
    logo_svg.setAttribute('y', '%s%s' % (height + bleed - zeropointtwo -
                                         convert(Decimal('0.25'), 'in', unit),
                                         unit))
    logo_svg.setAttribute('viewBox', FEDORA_VIEWBOX)
    logo_svg.setAttribute('preserveAspectRatio', 'xMinYMin meet')
    svg_element.appendChild(logo_svg)
    # Four foundations set in Comfortaa
    foundations = biz_card.createElement('text')
    foundations.setAttribute('font-family', 'Comfortaa')
    foundations.setAttribute('font-size', '10px')
    foundations.setAttribute('text-anchor', 'end')
    foundations.setAttribute('x', '%s%s' %
                             (width + bleed - (2 * zeropointtwo), unit))
    foundations.setAttribute('y', '%s%s' %
                             (height + bleed - zeropointtwo, unit))
    foundations_text = biz_card.createTextNode('FREEDOM. FEATURES. '
                                               'FRIENDS. FIRST.')
    foundations.appendChild(foundations_text)
    svg_element.appendChild(foundations)
    return biz_card.toprettyxml()


def gen_back(height, width, bleed, unit):
    """
    Generates the back of the business card.
    """
    # Create DOM objects
    biz_card = minidom.parseString(BLANK_SVG)
    fedora_logo = minidom.parse('/usr/share/fedora-logos/'
                                'fedora_logo_darkbackground.svg')
    # Basic constants
    total_height = height + (2 * bleed)
    total_width = width + (2 * bleed)
    # Add dimensions to SVG
    svg_element = biz_card.documentElement
    svg_element.setAttribute('height', '%s%s' % (total_height, unit))
    svg_element.setAttribute('width', '%s%s' % (total_width, unit))
    # Generator comment
    generator_comment = biz_card.createComment(
        'Generated by fedora-business-cards/%s' % __version__
    )
    svg_element.appendChild(generator_comment)
    # Blue background
    blue_back = biz_card.createElement('rect')
    blue_back.setAttribute('height', '%s%s' % (total_height, unit))
    blue_back.setAttribute('width', '%s%s' % (total_width, unit))
    blue_back.setAttribute('x', '0')
    blue_back.setAttribute('y', '0')
    blue_back.setAttribute('fill', '#3c6eb4')
    svg_element.appendChild(blue_back)
    # Fedora logo
    # This requires a whole bunch of calculations:
    # - The ratio between the length from the leftmost 'f' (not including the
    #   left terminal) to the right of the 'f' in the infinity logo (including
    #   the right terminal) and the width of the card is the golden ratio.
    # - The length above (the first part of the ratio) is centered in the card.
    #   This consists of 91.4408% of the width of the Fedora logo (the left
    #   terminal is 3.0853%).
    # - The aspect ratio of the Fedora logo is 3.290757.
    # - The "fedora" logotype is centered vertically on the card. This logotype
    #   consists of the bottom 69.7434% of the full logo.
    # Calculate length above
    middle_length = width / GOLDEN_RATIO
    horz_padding = (width - middle_length) / 2
    # Calculate width of logo
    logo_width = middle_length / Decimal('.914408')
    # Calculate horizontal position of logo
    horz_pos = horz_padding - (logo_width * Decimal('.030853'))
    # Calculate height of logotype
    logo_height = logo_width / Decimal('3.290757')
    logotype_height = logo_height * Decimal('.697434')
    # Calculate vertical position of logo
    vert_padding = (height - logotype_height) / 2
    vert_pos = height - (vert_padding + logo_height)
    # Apply everything to the logo SVG
    logo_svg = biz_card.importNode(fedora_logo.documentElement, 9001)
    logo_svg.setAttribute('width', '%s%s' % (logo_width, unit))
    logo_svg.setAttribute('viewBox', FEDORA_VIEWBOX)
    logo_svg.setAttribute('preserveAspectRatio', 'xMinYMin meet')
    logo_svg.setAttribute('x', '%s%s' % (horz_pos, unit))
    logo_svg.setAttribute('y', '%s%s' % (vert_pos, unit))
    svg_element.appendChild(logo_svg)
    return biz_card.toprettyxml()
